//*
 //* To change this license header, choose License Headers in Project Properties.
 //* To change this template file, choose Tools | Templates
 //* and open the template in the editor.
 //*/

/**
 *
 * @author gasco1246
 */


import javax.swing.*;
public class NewJFrame extends javax.swing.JFrame {
    /**
     * intialize the game,
     */
    public NewJFrame() {
        
        startScreen();//calls the instructions dialog box
        initComponents();
        
        emptyGrid();//starts the enemy placement methods
        
        ammoCount.setText(""+ammoCounter);//sets ammo counter
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        row = new javax.swing.JTextField();
        column = new javax.swing.JTextField();
        ShotPrompt = new javax.swing.JLabel();
        Letter = new javax.swing.JLabel();
        Number = new javax.swing.JLabel();
        Fire = new javax.swing.JButton();
        numShots = new javax.swing.JLabel();
        ammoCount = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        misses = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        hits = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 48)); // NOI18N
        jLabel1.setText("BomberCommand");

        row.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rowActionPerformed(evt);
            }
        });

        column.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                columnActionPerformed(evt);
            }
        });

        ShotPrompt.setText("Enter coordinates for shot");

        Letter.setText("Row");

        Number.setText("Column");

        Fire.setText("Fire");
        Fire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FireActionPerformed(evt);
            }
        });

        numShots.setText("Number of Shots:");

        jLabel2.setText("Hits");

        jLabel4.setText("Misses");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        misses.setColumns(20);
        misses.setRows(5);
        jScrollPane1.setViewportView(misses);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        hits.setColumns(20);
        hits.setRows(5);
        jScrollPane2.setViewportView(hits);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2)
                        .addGap(93, 93, 93)
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(row, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Letter))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Number)
                            .addComponent(column, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Fire)
                    .addComponent(ShotPrompt, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ammoCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numShots, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(402, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(ShotPrompt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(row, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(column, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Letter)
                            .addComponent(Number))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Fire)
                        .addGap(31, 31, 31)
                        .addComponent(numShots, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ammoCount, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(195, 195, 195))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(103, 103, 103)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(197, Short.MAX_VALUE)))
        );

        jLabel1.getAccessibleContext().setAccessibleName("Bomber Command");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int []y  = new int [6];
    int []x = new int[6];
    int ammoCounter = 10;
    
    /**
     * Shows the dialog pane with the instructions
     */
    
   public void startScreen(){
      
       //System.out.println("It worked");
       
       JOptionPane pane = new JOptionPane();
       JOptionPane.showMessageDialog(pane,"You are a captain in the RAF\nThanks to the local resistance, the anti-aircraft batteries are under supplied.\nWe know that there are 5 military industial complexes in the target town.\nFortunatley this town is organised in a 5 by 5 grid\nType in your target (row and column numbers ranging from 0-4) to send a bomb there.\nThe targeting system of your plane has a 5 by 5 grid going from coordinates 0 through 4\nYour plane can only hold ten bombs, take care to aim.\nDo try to hit only the military parts of the town.\nGood luck for your mission.  \n");
   }
    
    private void rowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rowActionPerformed

    private void columnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_columnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_columnActionPerformed
    
    int hitsCount, missesCount = 0;
    
    
    private void FireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FireActionPerformed
        
        
        checkInput();
        
        
    }//GEN-LAST:event_FireActionPerformed
    
    /**
     * This method checks to see if the input entered is valid or not and then calls the fired method
     */
    
    
    public void checkInput(){
        String rowIn = row.getText();
        String columnIn = column.getText();
        boolean valid = false;
        
        int tryX;
        int tryY;
        int counter = 0;
        
        while(valid == false){
            try{
                tryX = Integer.parseInt(rowIn);
                tryY = Integer.parseInt(columnIn);
                
                if(tryX>=0&&tryX<=4){
                    
                    counter++;
                }
                if(tryY>=0&&tryY<=4){
                    
                    counter++;
                }
                if(counter==2){
                    valid = true;
                    fired();
                }
                
            }catch(NumberFormatException e){
                JOptionPane pane = new JOptionPane();
                JOptionPane.showMessageDialog(pane,"Dude, Not cool try entering numbers from 0-4");
                row.setText("");
                column.setText("");
                valid = true;
            }
            catch(ArrayIndexOutOfBoundsException yee){
                JOptionPane pane = new JOptionPane();
                JOptionPane.showMessageDialog(pane," REALLY, enter only values from 0 to 4");
                row.setText("");
                column.setText("");
                valid = true;
            }
            
            
        }
        
        
        
    }
    
 
    /**
     * this method takes the inputed coordinates and checks to see if they are hits or missed
     */
    public void fired(){
        
        if(ammoCounter > 1){
            
            String rowIn = row.getText();
            int rowLoc  = Integer.parseInt(rowIn);
            String columnIn = column.getText();
            int columnLoc = Integer.parseInt(columnIn);
            String hitPlaces = "";
            String missedPlaces = "";
            row.setText("");
            column.setText("");
            
            if(location[rowLoc][columnLoc] == 1){

                hitPlaces = hitPlaces+"\n"+ rowLoc+", "+columnLoc+"\n";
                hits.append(hitPlaces);
                hitsCount++;
                if (hitsCount>=5){
                    win();
                }
            }
            
            else{
                missedPlaces  = missedPlaces+"\n" +rowLoc+", "+columnLoc+"\n";
                misses.append(missedPlaces);
                missesCount++;
            }
            ammoCounter--;
            ammoCount.setText(""+ammoCounter);
            
            
        }else{
            String rowIn = row.getText();
            int rowLoc  = Integer.parseInt(rowIn);
            String columnIn = column.getText();
            int columnLoc = Integer.parseInt(columnIn);
            String hitPlaces = "";
            String missedPlaces = "";
            if(location[rowLoc][columnLoc] == 1){

                hitPlaces = hitPlaces+"\n"+ rowLoc+", "+columnLoc+"\n";
                hits.append(hitPlaces);
                hitsCount++;
            }
            
            else{
                missedPlaces  = missedPlaces+"\n" +rowLoc+", "+columnLoc+"\n";
                misses.append(missedPlaces);
                missesCount++;
            }
            
            endGame();
            
        }
    }
    


//end game by displaying the you win screen
    public void win(){
        this.setVisible(false);
        new NewJFrame2().setVisible(true);
        
    }
    
    //ends the game if you did not win
    public void endGame(){
        //code from arjunsk.com "how to send values between 2 jframes in java netbeans
        double dead;
        dead = Math.round(Math.random()*5+1);
        double killed;
        killed = dead*hitsCount;
        
        String info[] = new String[3];
        info[0] = ""+hitsCount;
        info[1] = ""+missesCount;
        info[2] = ""+killed;
        
        NewJFrame1.main(info);
        this.setVisible(false);
        
        
    }
    

    
    int location [][] = new int[5][5];
    /**
     * Sets all parts of the array to be 0
     */
    public void emptyGrid(){
        
        
        for (int i = 0; i<=4 ;i++){
            for(int j = 0;j<=4;j++){
                location[i][j] = 0;
            }
        }
        
        enemyGen();
        
        
        
        
        
    }
    /**
     * 
     * generates the random placement of the enemies and checks to make sure there are no doubles.
    */
    public void enemyGen(){
        
        
        for(int x = 0; x<=4;x++){
            
            int randX =(int) Math.round(Math.random()*4+0);
            int randY =(int) Math.round(Math.random()*4+0);
            //System.out.println("randx"+randX);
           // System.out.println("randy"+randY);
            
            
            //gen coordinates
            
            if (location[randX][randY]==0){
                location[randX][randY] = 1;
                
            }
            else{
              
                while(location[randX][randY]!=0){
                    randX =(int) Math.round(Math.random()*4+0);
                    randY =(int) Math.round(Math.random()*4+0);
            
                if (location[randX][randY]==0){
                    location[randX][randY] = 1;
                
            }
            }
            }
            showEnemies();
        }//ene of x
            
    }
    /**
     * outputs the enemy locations for testing and cheating
     */
    public void showEnemies(){
        for (int i = 0; i<=4 ;i++){
            for(int j = 0;j<=4;j++){
                if(location[i][j]==1){
                    System.out.println("new");
                    System.out.println(i);
                    System.out.println(j);
                }
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Fire;
    private javax.swing.JLabel Letter;
    private javax.swing.JLabel Number;
    private javax.swing.JLabel ShotPrompt;
    private javax.swing.JLabel ammoCount;
    private javax.swing.JTextField column;
    private javax.swing.JTextArea hits;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea misses;
    private javax.swing.JLabel numShots;
    private javax.swing.JTextField row;
    // End of variables declaration//GEN-END:variables

}
